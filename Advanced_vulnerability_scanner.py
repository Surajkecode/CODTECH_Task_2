import nmap
import json

def save_results_to_file(target, results):
    """Save the scan results to a JSON file."""
    filename = f"{target}_scan_results.json"
    with open(filename, "w") as file:
        json.dump(results, file, indent=4)
    print(f"Scan results saved to {filename}")

def scan_target(target, port_range='1-1024'):
    """Scan the target for open ports and check for vulnerabilities."""
    try:
        print(f"Scanning {target} for open ports (Range: {port_range})...")

        # Initialize Nmap scanner
        scanner = nmap.PortScanner()

        # Perform the scan with Nmap
        scanner.scan(target, port_range)

        results = {}

        # Process the scan results for all hosts
        for host in scanner.all_hosts():
            host_info = {
                "host": host,
                "state": scanner[host].state(),
                "protocols": {}
            }

            for protocol in scanner[host].all_protocols():
                protocol_info = {
                    "protocol": protocol,
                    "ports": []
                }

                ports = scanner[host][protocol].keys()
                for port in sorted(ports):
                    port_state = scanner[host][protocol][port]['state']
                    protocol_info["ports"].append({
                        "port": port,
                        "state": port_state
                    })

                    # Check for specific vulnerabilities or services
                    if port == 80 and port_state == "open":
                        protocol_info["ports"][-1]["vulnerabilities"] = "HTTP service open, further checks can be implemented"

                host_info["protocols"][protocol] = protocol_info

            results[host] = host_info

        # Save the results to a file
        save_results_to_file(target, results)

    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    target = input("Enter the target IP or domain: ")
    port_range = input("Enter the port range to scan (default: '1-1024'): ") or '1-1024'
    scan_target(target, port_range)
